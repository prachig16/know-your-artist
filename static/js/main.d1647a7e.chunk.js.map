{"version":3,"sources":["Components/ArtistDetails.js","Components/UserForm.js","firebase.js","Components/App.js","reportWebVitals.js","index.js"],"names":["ArtistDetails","className","src","this","props","artistImg","alt","artistName","artistLabel","artistForm","artistStyle","artistGenre","artistBio","Component","UserForm","action","htmlFor","type","id","placeholder","required","onChange","getInput","onClick","getSubmit","href","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","handleInputChange","e","setState","userSelection","target","value","handleInputSubmit","preventDefault","getArtistDetails","state","userChoice","axios","url","method","responseType","params","s","then","apiData","console","log","data","artists","artistsInfo","dbRef","database","ref","newArtist","searchedArtists","once","returnedInfoObj","artistInfoObj","name","strArtist","image","strArtistThumb","push","alert","on","val","myData","newList","key","newObj","map","artist","index","strLabel","intFormedYear","strStyle","strGenre","strBiographyEN","length","artistSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1647a7e.chunk.js","sourcesContent":["import { Component, Fragment } from 'react';\nimport '../Styles/ArtistDetails.css';\n\n\nclass ArtistDetails extends Component {\n    render() {\n        return (\n            <Fragment>\n            {/* Artist information will be displayed in this section and will be styled as per className:\"displayArtistInfo\" using props: this.props.*/}\n\n                <div className=\"displayInfo\">\n                    <figure>\n                        <img src={this.props.artistImg} alt=\"default for the artist\" />\n                    </figure>\n                    <section>\n                        <ul>\n                            <li>\n                                <i className=\"fas fa-headphones-alt\"></i>\n                                <h4>Name:</h4> {this.props.artistName}\n                            </li>\n\n    \n                            <li>\n                                <i className=\"fas fa-headphones-alt\"></i>  \n                                <h4>Label: </h4>\n                                { \n                                    this.props.artistLabel ?\n                                    this.props.artistLabel \n                                    : ' Information Not Available'\n                                }\n                            </li>\n\n                            <li>\n                                <i className=\"fas fa-headphones-alt\"></i>\n                                <h4>Formed Year: </h4>\n                                {\n                                    this.props.artistForm ?\n                                    this.props.artistForm\n                                    : ' Information Not Available'\n                                }\n                            </li>\n\n                            <li>\n                                <i className=\"fas fa-headphones-alt\"></i>\n                                <h4>Style: </h4>\n                                {\n                                    this.props.artistStyle ?\n                                    this.props.artistStyle\n                                    : ' Information Not Available'\n                                }\n                            </li>\n                            \n                            <li>\n                                <i className=\"fas fa-headphones-alt\"></i>\n                                <h4>Genre: </h4>\n                                {\n                                    this.props.artistGenre ?\n                                    this.props.artistGenre\n                                    : ' Information Not Available'\n                                }\n                            </li>\n                        </ul>\n                    </section>\n                </div>\n                \n                <article>\n                    <h3>Biography: </h3>\n                    <p>{this.props.artistBio}</p>\n                </article>\n            </Fragment>\n        )\n    }\n}\nexport default ArtistDetails;","import { Component } from 'react';\nimport '../Styles/UserForm.css';\n\n\nclass UserForm extends Component {\n   \n    render() { \n        return (\n           <form action=\"\">\n                <label htmlFor=\"newChoice\" className=\"srOnly\">Type the name</label>\n                <input type=\"text\" id=\"newChoice\" placeholder=\"Artist name..\" required onChange={this.props.getInput} />\n                <div className=\"selectionButton\">\n                    <button onClick={this.props.getSubmit}>Search</button>\n                    <a href=\"./app.js\"><i className=\"fas fa-redo\"></i></a>\n                </div>\n           </form>\n        )\n    }\n}\nexport default UserForm;","import firebase from 'firebase/app';\nimport 'firebase/database';\n\n\n// Initialize Firebase\n// *** USE YOUR CONFIG OBJECT ***\nconst config = {\n    apiKey: \"AIzaSyBxitI7WR5-FL5rHXE34cYiJaoA2BR6Wgs\",\n    authDomain: \"know-your-artist-98df4.firebaseapp.com\",\n    databaseURL: \"https://know-your-artist-98df4.firebaseio.com\",\n    projectId: \"know-your-artist-98df4\",\n    storageBucket: \"know-your-artist-98df4.appspot.com\",\n    messagingSenderId: \"824222612452\",\n    appId: \"1:824222612452:web:0a73ff59e1fe815249a5f1\"\n};\nfirebase.initializeApp(config);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;\n\n","import '../Styles/App.css';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport ArtistDetails from './ArtistDetails.js';\nimport UserForm from './UserForm.js';\nimport firebase from '../firebase.js';\n\n\nclass App extends Component {\n  \n  constructor(){\n    super();\n    this.state ={\n      artistsInfo: [],\n      userSelection: '',\n      searchedArtists: []\n    }\n    console.log(\"constructor lifecyle\",this.state);\n  }\n  \n  // setting the user selection to the value of the input form.....\n  handleInputChange = (e) => {\n    this.setState({\n      userSelection: e.target.value\n    })\n  }\n\n  // Call the API using the input provided by user......\n  handleInputSubmit = (e) => {\n    e.preventDefault();\n    this.getArtistDetails(this.state.userSelection);\n  }\n\n  // calling a function to get the artist details which will use \"userChoice\" as an input parameter....\n  getArtistDetails = (userChoice) => {\n    axios({\n      url: 'https://www.theaudiodb.com/api/v1/json/1/search.php',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        s: userChoice\n      }\n    }).then((apiData) => {\n      console.log('api call here',apiData.data.artists);\n      if (apiData.data.artists != null){\n    \n      this.setState({\n        artistsInfo: apiData.data.artists\n      })\n      console.log(this.state.artistsInfo);\n      // after receiving the API call, called the empty DB   \n      const dbRef = firebase.database().ref();\n      const newArtist = this.state.searchedArtists;\n      dbRef.once('value', (returnedInfoObj) => {\n        // created an empty array to store the object which will be returned from the API object\n        // assigning the parameter to the API artist info call\n        returnedInfoObj = this.state.artistsInfo[0];\n        \n        const artistInfoObj = {\n          name: returnedInfoObj.strArtist,\n          image: returnedInfoObj.strArtistThumb\n        }\n          // pushing this object in the empty array\n      \n        newArtist.push(artistInfoObj);\n        \n\n       console.log('inside then',newArtist);\n        dbRef.push(newArtist[0]);\n\n        this.setState({\n          // setting this new array with 2 objects to the set\n          searchedArtists: newArtist\n        })\n        console.log(this.state.searchedArtists);\n      })\n      console.log(newArtist);\n      }\n      else{\n        alert('Artist not found! Check the spelling or spaces!')\n      }\n    })\n  }\n  \n \n  componentDidMount(){\n    const dbRef = firebase.database().ref();\n    console.log(dbRef);\n    dbRef.on('value', (data) =>{\n      console.log('component did mount',data.val());\n      let myData = data.val();\n      let newList = [];\n      for (let key in myData){\n        let newObj = {\n          image:myData[key].image,\n          name: myData[key].name\n        }\n        newList.push(newObj);\n      }\n      // console.log(newList);\n      this.setState({\n        searchedArtists: newList\n      })\n\n    })\n  }\n\n  render() { \n    return (\n      <div className=\"wrapper\">\n        <header>\n          <h1>Know your Artist!</h1>\n        </header>\n\n        <main>\n          <UserForm \n            getInput = {this.handleInputChange}\n            getSubmit={this.handleInputSubmit}\n          />\n          \n\n          <section className=\"displayArtistInfo\">\n            {\n              this.state.artistsInfo.map((artist, index) => {\n                return (\n                  <ArtistDetails\n                    key={index}\n                    artistImg={artist.strArtistThumb}\n                    artistName={artist.strArtist}\n                    artistLabel={artist.strLabel}\n                    artistForm={artist.intFormedYear}\n                    artistStyle={artist.strStyle}\n                    artistGenre={artist.strGenre}\n                    artistBio={artist.strBiographyEN}\n                  />\n                )\n              })  \n            }\n          </section>\n\n            {/*moving through the array created in database to check if the value is displayed in the console  */}\n          <section className=\"searchedInfo\">\n            <h2>Recent Searches:</h2>\n            <ul>\n              {\n                this.state.searchedArtists.length === 0 ?\n                <p>No recent searches.</p>\n                :\n                this.state.searchedArtists.map((artistSearch, index)=>{\n                  return(\n                    <li key={index}>\n                      <img src={artistSearch.image} alt=\"randomimage\"/>\n                      <p>{artistSearch.name}</p>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </section>\n        </main>\n\n        <footer>\n          <p> Copyright <i className=\"far fa-copyright\"></i> <a href=\"https://junocollege.com/\">2019 HackerYou</a> | \n           Created by Prachi G.</p>\n        </footer>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}