{"version":3,"sources":["ArtistDetails.js","UserForm.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["ArtistDetails","className","src","this","props","artistImg","alt","artistName","artistLabel","artistForm","artistStyle","artistGenre","artistBio","Component","UserForm","action","htmlFor","type","id","placeholder","required","onChange","getInput","onClick","getSubmit","href","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","handleInputChange","e","setState","userSelection","target","value","handleInputSubmit","preventDefault","getArtistDetails","state","userChoice","axios","url","method","responseType","params","s","then","apiData","console","log","data","artists","artistsInfo","dbRef","database","ref","on","returnedInfoObj","newArtist","key","artistInfoObj","name","strArtist","image","strArtistThumb","push","searchedArtists","map","artist","index","strLabel","intFormedYear","strStyle","strGenre","strBiographyEN","artistSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf500f37.chunk.js","sourcesContent":["import { Component, Fragment } from 'react';\nimport './ArtistDetails.css';\n\n\nclass ArtistDetails extends Component {\n    render() {\n        return (\n            <Fragment>\n            {/* Artist information will be displayed in this section and will be styled as per className:\"displayArtistInfo\" using props: this.props.*/}\n\n                <div className=\"displayInfo\">\n                    <figure>\n                        <img src={this.props.artistImg} alt=\"default for the artist\" />\n                    </figure>\n                    <section>\n                        <ul>\n                            <li>Name: {this.props.artistName}</li>\n                            <li>Label: {this.props.artistLabel}</li>\n                            <li>Formed Year: {this.props.artistForm}</li>\n                            <li>Style: {this.props.artistStyle}</li>\n                            <li>Genre: {this.props.artistGenre}</li>\n                        </ul>\n                    </section>\n                </div>\n                \n                <article>Biography: {this.props.artistBio}</article>\n            </Fragment>\n        )\n    }\n}\nexport default ArtistDetails;","import { Component } from 'react';\nimport './UserForm.css'\n\n\nclass UserForm extends Component {\n   \n    render() { \n        return (\n           <form action=\"\">\n                <label htmlFor=\"newChoice\" className=\"srOnly\">Type the name</label>\n                <input type=\"text\" id=\"newChoice\" placeholder=\"Artist name..\" required onChange={this.props.getInput} />\n                <div className=\"selectionButton\">\n                    <button onClick={this.props.getSubmit}>Search</button>\n                    <a href=\"./app.js\"><i className=\"fas fa-redo\"></i></a>\n                </div>\n           </form>\n        )\n    }\n}\nexport default UserForm;","import firebase from 'firebase/app';\nimport 'firebase/database';\n\n\n// Initialize Firebase\n// *** USE YOUR CONFIG OBJECT ***\nconst config = {\n    apiKey: \"AIzaSyBxitI7WR5-FL5rHXE34cYiJaoA2BR6Wgs\",\n    authDomain: \"know-your-artist-98df4.firebaseapp.com\",\n    databaseURL: \"https://know-your-artist-98df4.firebaseio.com\",\n    projectId: \"know-your-artist-98df4\",\n    storageBucket: \"know-your-artist-98df4.appspot.com\",\n    messagingSenderId: \"824222612452\",\n    appId: \"1:824222612452:web:0a73ff59e1fe815249a5f1\"\n};\nfirebase.initializeApp(config);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;\n\n","import './App.css';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport ArtistDetails from './ArtistDetails.js';\nimport UserForm from './UserForm.js';\nimport firebase from './firebase.js';\n\n\n\nclass App extends Component {\n  \n  constructor(){\n    super();\n    this.state ={\n      artistsInfo: [],\n      userSelection: '',\n      searchedArtists: []\n    }\n    console.log(\"constructor lifecyle\",this.state);\n  }\n  \n  // setting the user selection to the value of the input form.....\n  handleInputChange = (e) => {\n    this.setState({\n      userSelection: e.target.value\n    })\n  }\n\n  // Call the API using the input provided by user......\n  handleInputSubmit = (e) => {\n    e.preventDefault();\n    this.getArtistDetails(this.state.userSelection);\n    \n  }\n\n  // calling a function to get the artist details which will use \"userChoice\" as an input parameter....\n  getArtistDetails = (userChoice) => {\n    axios({\n      url: 'https://www.theaudiodb.com/api/v1/json/1/search.php',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        s: userChoice\n      }\n    }).then((apiData) => {\n      console.log(apiData.data.artists, 'api called');\n      this.setState({\n        artistsInfo: apiData.data.artists\n      })\n      console.log(this.state.artistsInfo);   \n      // this.afterSearch(this.state.artistsInfo); \n      const dbRef = firebase.database().ref();\n      dbRef.on('value', (returnedInfoObj) => {\n        const newArtist = [];\n        returnedInfoObj = this.state.artistsInfo;\n        for (let key in returnedInfoObj) {\n          const artistInfoObj = {\n            name: returnedInfoObj[key].strArtist,\n            image: returnedInfoObj[key].strArtistThumb\n          }\n          newArtist.push(artistInfoObj);\n        }\n        this.setState({\n          searchedArtists: newArtist\n        })\n        console.log(this.state.searchedArtists);\n      })\n      dbRef.push(this.state.searchedArtists);  \n    })\n  }\n  \n \n  \n\n  \n  \n  \n  \n  // writing a function that will take the API call as it's input....\n  // These two parameter need to be saved and pushed as an object to the searchedArtists[]\n  // console.log(this.state.artistsInfo.strArtist);\n  // console.log(this.state.artistsInfo.strArtistThumb);\n\n\n  // afterSearch = (returnedInfo) =>{\n  \n  //   console.log(this.state.artistsInfo);\n  //     const newArtist = [];\n  //     const returnedInfoObj = this.state.artistsInfo;\n\n  //     for (let key in returnedInfoObj){\n  //       const artistInfoObj={\n  //         name: returnedInfoObj[key].strArtist,\n  //         image: returnedInfoObj[key].strArtistThumb\n  //       }\n  //       newArtist.push(artistInfoObj);\n  //     }\n  //     console.log(newArtist);\n  //     this.setState({\n  //       searchedArtists: newArtist\n  //     })\n  //     console.log(this.state);\n\n\n  //   // dbRef.on('value', (response) => {\n  //   //   const newArtist = [];\n  //   //   const searchedArtistImage = response.val();\n  //   //   console.log(searchedArtistImage);\n  \n  //   //   // for (let property in searchedArtistImage) {\n  //   //   //   console.log(property, searchedArtistImage[property]);\n  //   //   // }\n\n\n  //   //   this.setState({\n  //   //     searchedArtists: newArtist\n  //   //   })\n  //   // });\n  // }\n  // variable that holds a reference to the database\n  \n\n  \n\n  // showSearchedArtist = (searchedAristInfo) =>{\n  //   const dbRef = firebase.database().ref();\n  //   dbRef.on('value', (response) => {\n\n  //     // Here we use Firebase's .val() method to parse our database info the way we want it\n  //     console.log(response.val());\n  //     const newArtist = [];\n  //     const data = response.val();\n\n  //     for (let key in data) {\n  //       newArtist.push(data[key]);\n  //     }\n\n  //     this.setState({\n  //       searchedArtists: newArtist\n  //     })\n  //   })\n  // }\n\n  render() { \n    return (\n      <div className=\"wrapper\">\n        <header>\n          <h1>Know your Artist!</h1>\n        </header>\n\n        <main>\n          <UserForm \n            getInput = {this.handleInputChange}\n            getSubmit={this.handleInputSubmit}\n          />\n          \n\n          <section className=\"displayArtistInfo\">\n            {\n              this.state.artistsInfo.map((artist, index) => {\n                return (\n                  <ArtistDetails\n                    key={index}\n                    artistImg={artist.strArtistThumb}\n                    artistName={artist.strArtist}\n                    artistLabel={artist.strLabel}\n                    artistForm={artist.intFormedYear}\n                    artistStyle={artist.strStyle}\n                    artistGenre={artist.strGenre}\n                    artistBio={artist.strBiographyEN}\n                  />\n                )\n              })  \n            }\n          </section>\n\n            {/*moving through the array created in database to check if the value is displayed in the console  */}\n          <section className=\"searchedInfo\">\n            <ul>\n              {\n                this.state.searchedArtists.map((artistSearch, index)=>{\n                  return(\n                    <li key={index}><img src={artistSearch.image} alt=\"randomimage\" />{artistSearch.name}</li>\n                  )\n                })\n              }\n            </ul>\n          </section>\n        </main>\n        <footer>\n          <p> Copyright <i className=\"far fa-copyright\"></i> <a href=\"https://junocollege.com/\">2019 HackerYou</a> | \n           Created by Prachi G.</p>\n        </footer>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}