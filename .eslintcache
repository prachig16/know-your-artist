[{"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/reportWebVitals.js":"1","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/index.js":"2","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/firebase.js":"3","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/App.js":"4","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/ArtistDetails.js":"5","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/UserForm.js":"6"},{"size":362,"mtime":1606514251800,"results":"7","hashOfConfig":"8"},{"size":511,"mtime":1607049461837,"results":"9","hashOfConfig":"8"},{"size":625,"mtime":1607049509646,"results":"10","hashOfConfig":"8"},{"size":4691,"mtime":1607069373131,"results":"11","hashOfConfig":"8"},{"size":5839,"mtime":1607066314729,"results":"12","hashOfConfig":"8"},{"size":659,"mtime":1607063573985,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bqj010",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/reportWebVitals.js",[],["29","30"],"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/index.js",[],["31","32"],"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/firebase.js",[],"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/App.js",["33"],"import '../Styles/App.css';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport ArtistDetails from './ArtistDetails.js';\nimport UserForm from './UserForm.js';\nimport firebase from '../firebase.js';\n\n\nclass App extends Component {\n  \n  constructor(){\n    super();\n    this.state ={\n      artistsInfo: [],\n      userSelection: '',\n      searchedArtists: [],\n      displaySearchResult: []\n    }\n  }\n  \n  // setting the user selection to the value of the input form.....\n  handleInputChange = (e) => {\n    this.setState({\n      userSelection: e.target.value\n    })\n  }\n\n  // Call the API using the input provided by user......\n  handleInputSubmit = (e) => {\n    e.preventDefault();\n    this.getArtistDetails(this.state.userSelection);\n  }\n\n  // calling a function to get the artist details which will use \"userChoice\" as an input parameter....\n  getArtistDetails = (userChoice) => {\n    axios({\n      url: 'https://www.theaudiodb.com/api/v1/json/1/search.php',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        s: userChoice\n      }\n    }).then((apiData) => {\n      if (apiData.data.artists != null){\n        // Setting the API call to artsistInfo if the returned API is not null\n        this.setState({\n          artistsInfo: apiData.data.artists\n        })\n        \n        this.pushTheInfo(this.state.artistsInfo[0]);\n      }\n      else{\n        alert('Artist not found! Check the spelling or spaces!')\n      }\n    })\n  }\n\n  // writing a function, to push the details to db, which will take API call as an argument when submit is clicked..\n  pushTheInfo = (infoReceived) =>{\n    const dbRef = firebase.database().ref();\n  \n    const newArtist = [];\n    \n    const infoToPush = {\n      name: infoReceived.strArtist,\n      image: infoReceived.strArtistThumb\n    }\n    newArtist.push(infoToPush);\n\n    dbRef.push(newArtist[0])\n    \n    this.setState({\n      // setting this new array with 2 objects to the set\n      searchedArtists: newArtist\n    })\n  }\n\n\n  componentDidMount(){\n    const dbRef = firebase.database().ref();\n    \n    dbRef.on('value', (data) =>{\n      \n      let myData = data.val();\n      let newList = [];\n      for (let key in myData){\n        let newObj = {\n          image:myData[key].image,\n          name: myData[key].name\n        }\n        newList.push(newObj);\n      }\n      \n      this.setState({\n        displaySearchResult: newList\n      }) \n    })\n    \n  }\n\n  render() { \n    return (\n      <div className=\"wrapper\">\n        <header>\n          <h1>Know your Artist!</h1>\n          <button className=\"goTop\"><a href=\"#\"><i className=\"fas fa-chevron-circle-up\"></i></a></button>\n        </header>\n\n        <main>\n          <UserForm \n            getInput = {this.handleInputChange}\n            getSubmit={this.handleInputSubmit}\n          />\n          \n\n          <section className=\"displayArtistInfo\">\n            {\n              this.state.artistsInfo.map((artist, index) => {\n                return (\n                  <ArtistDetails\n                    key={index}\n                    artistImg={artist.strArtistThumb}\n                    artistName={artist.strArtist}\n                    artistLabel={artist.strLabel}\n                    artistForm={artist.intFormedYear}\n                    artistStyle={artist.strStyle}\n                    artistGenre={artist.strGenre}\n                    artistBio={artist.strBiographyEN}\n                    artistFB={artist.strFacebook}\n                    artistTwitter={artist.strTwitter}\n                    artistWebsite={artist.strWebsite}\n                    artistLastFM={artist.strLastFMChart}\n                  />\n                )\n              })  \n            }\n          </section>\n\n            {/*moving through the array created in database to check if the value is displayed in the console  */}\n          <section className=\"searchedInfo\">\n            <h2>Recent Searches:</h2>\n            <ul>\n              {\n                this.state.displaySearchResult.length === 0 ?\n                <p>No recent searches.</p>\n                :\n                this.state.displaySearchResult.map((artistSearch, index)=>{\n                  return(\n                    <li key={index}>\n                      <img src={artistSearch.image} alt=\"randomimage\"/>\n                      <p>{artistSearch.name}</p>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </section>\n        </main>\n\n        <footer>\n          <p> Copyright <i className=\"far fa-copyright\"></i> <a href=\"https://junocollege.com/\">2019 HackerYou</a> | \n           Created by Prachi G.</p>\n        </footer>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/ArtistDetails.js",[],"/Users/prachigujar/Documents/Juno/juno/projects/prachi-gujar-project-5/src/Components/UserForm.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":106,"column":37,"nodeType":"42","endLine":106,"endColumn":49},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],["43"],["44"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]